# HelmRelease Template
# Use this template as a starting point for new HelmReleases
# Replace placeholders marked with < > with actual values
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: <app-name>
  namespace: <namespace>
spec:
  # Reconciliation interval - adjust based on criticality:
  # - Critical infrastructure (Flux, cert-manager): 5m
  # - Core services (ingress, DNS, monitoring): 15m
  # - Applications: 30m-1h
  interval: 30m

  # Chart configuration
  chart:
    spec:
      chart: <chart-name>
      version: "<version>" # ALWAYS pin versions
      sourceRef:
        kind: HelmRepository
        name: <repo-name>
        namespace: flux-system
      # Optional: Override repository interval for this chart
      # interval: 5m

  # Optional: Specify release name if different from metadata.name
  # releaseName: <release-name>

  # Target namespace for the release
  targetNamespace: <namespace>

  # Installation configuration
  install:
    createNamespace: true
    remediation:
      retries: 3 # Standard retry count
  # Optional: Add strategy for critical services
  # strategy: rollback

  # Upgrade configuration
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
      # Optional: Add strategy for critical services
      # strategy: rollback
    cleanupOnFail: true

  # Optional: Dependencies on other HelmReleases or Kustomizations
  # dependsOn:
  #   - name: <dependency-name>
  #     namespace: <dependency-namespace>

  # Values override
  values:
    # ALWAYS specify resource constraints
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi

    # Common patterns:

    # Service configuration
    # service:
    #   type: ClusterIP
    #   port: 80

    # Ingress configuration
    # ingress:
    #   enabled: true
    #   className: nginx-internal  # or nginx-external
    #   annotations:
    #     cert-manager.io/cluster-issuer: letsencrypt-production
    #   hosts:
    #     - host: <app>.example.com
    #       paths:
    #         - path: /
    #           pathType: Prefix

    # Persistence configuration
    # persistence:
    #   enabled: true
    #   storageClass: local-path
    #   size: 10Gi

    # Security context
    # securityContext:
    #   runAsNonRoot: true
    #   runAsUser: 1000
    #   fsGroup: 1000

    # Pod security context
    # podSecurityContext:
    #   runAsNonRoot: true
    #   runAsUser: 1000
    #   fsGroup: 1000

    # Probes configuration
    # livenessProbe:
    #   enabled: true
    #   initialDelaySeconds: 30
    #   periodSeconds: 10
    # readinessProbe:
    #   enabled: true
    #   initialDelaySeconds: 5
    #   periodSeconds: 10

  # Optional: Load values from ConfigMaps or Secrets
  # valuesFrom:
  #   - kind: ConfigMap
  #     name: <configmap-name>
  #     valuesKey: values.yaml
  #   - kind: Secret
  #     name: <secret-name>
  #     valuesKey: secret-values.yaml

  # Optional: Post-renderers for advanced customization
  # postRenderers:
  #   - kustomize:
  #       patches:
  #         - target:
  #             kind: Deployment
  #             name: <deployment-name>
  #           patch: |
  #             - op: add
  #               path: /spec/template/metadata/annotations/custom-annotation
  #               value: "custom-value"
