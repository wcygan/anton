---
description:
globs:
alwaysApply: true
---
# Cluster Upgrade and System Extension Guide for This Repository

This guide outlines how to upgrade Talos OS, Kubernetes, and manage Talos system extensions specifically for this project, leveraging its configuration files and `[Taskfile.yaml](mdc:Taskfile.yaml)` automation.

## 1. Understanding Key Configuration Files

- **`[talenv.yaml](mdc:talos/talenv.yaml)`**: Defines the target `talosVersion` and `kubernetesVersion` for the cluster. This file is typically generated from `templates/config/talos/talenv.yaml.j2` (mdc:templates/config/talos/talenv.yaml.j2). **To ensure changes persist and are not overwritten by `task configure` or `task talos:generate-config`, updates to Talos or Kubernetes versions should be made in the `templates/config/talos/talenv.yaml.j2` template file.**
- **`[talconfig.yaml](mdc:talos/talconfig.yaml)`**: Contains the detailed Talos cluster configuration, including node definitions and the `talosImageURL` for each node. The `talosImageURL` (e.g., `factory.talos.dev/installer/<SCHEMATIC_ID>`) embeds the chosen Talos version and any pre-selected system extensions based on a schematic ID from the [Talos Linux Image Factory](mdc:https:/factory.talos.dev).
- **`[README.md](mdc:README.md)`**: Provides general project setup, workflow, and includes crucial `task` commands for cluster operations.
- **`[hardware-configuration.mdc](mdc:hardware-configuration.mdc)`**: Details the specific hardware setup, including node IPs (e.g., 192.168.1.98 for k8s-1) and names (k8s-1, k8s-2, k8s-3), which are used in `task` commands. It also notes the Talos schematic ID currently in use.

## 2. Upgrading Talos OS Version

The Talos OS version for the cluster is managed via `[talenv.yaml](mdc:talos/talenv.yaml)` (generated from `templates/config/talos/talenv.yaml.j2` (mdc:templates/config/talos/talenv.yaml.j2)) and applied using a task.

**Procedure:**

1.  **Update Target Version:**
    Modify the `talosVersion` in `templates/config/talos/talenv.yaml.j2` (mdc:templates/config/talos/talenv.yaml.j2) to the desired new version. For example:
    ```yaml
    # templates/config/talos/talenv.yaml.j2
    talosVersion: v1.10.0 # Changed from a previous version
    kubernetesVersion: v1.32.0 # Or your current/target k8s version
    ```
2.  **(Re)generate Talos Configuration:**
    Ensure configurations are up-to-date with the new version, including any schematic ID or patch changes.
    ```bash
    task talos:generate-config
    ```
3.  **Stage Configuration on Each Node (without reboot):**
    Apply the regenerated configs to each node. This stages changes but does *not* trigger a reboot.
    ```bash
    task talos:apply-node IP=<NODE_IP> MODE=auto
    # Default MODE=auto stages changes without reboot.
    # To stage and reboot immediately: MODE=reboot
    # Example: task talos:apply-node IP=192.168.1.98 MODE=reboot
    ```
4.  **Upgrade Talos OS on Each Node (Sequentially):**
    Execute the upgrade task for each node, one at a time, to download the new OS image and reboot.
    Monitor each in-flight upgrade (e.g., via `talosctl dashboard --nodes <IPs>` or `kubectl get nodes -w`) and wait for `Ready` before proceeding.
    ```bash
    task talos:upgrade-node IP=<NODE_IP>
    # Example: task talos:upgrade-node IP=192.168.1.98
    ```

## 3. Upgrading Kubernetes Version

The Kubernetes version for the cluster is also managed via `[talenv.yaml](mdc:talos/talenv.yaml)` (generated from `templates/config/talos/talenv.yaml.j2` (mdc:templates/config/talos/talenv.yaml.j2)) and applied using a task.

**Procedure:**

1.  **Update Target Version:**
    Modify the `kubernetesVersion` in `templates/config/talos/talenv.yaml.j2` (mdc:templates/config/talos/talenv.yaml.j2) to the desired new version.
    ```yaml
    # templates/config/talos/talenv.yaml.j2
    talosVersion: v1.10.0 # Or your current/target Talos version
    kubernetesVersion: v1.33.0 # Changed from a previous version
    ```
2.  **(Re)generate Talos Configuration:**
    Update the machine configs for the new Kubernetes version:
    ```bash
    task talos:generate-config
    ```
3.  **Perform Kubernetes Upgrade:**
    Orchestrate the Kubernetes version bump across all control plane nodes.
    ```bash
    task talos:upgrade-k8s
    ```
    Monitor progress (e.g., `kubectl get nodes -w` or `talosctl dashboard`) and wait for all components to report the new version.

### Verification: Kubernetes Version

After the upgrade completes, confirm the Kubernetes control plane and node versions:
```bash
kubectl version --short
kubectl get nodes -o wide
```

## 4. Managing Talos System Extensions

Talos system extensions (e.g., drivers, custom runtimes) are baked into the Talos installer image specified by the `talosImageURL` in `[talconfig.yaml](mdc:talos/talconfig.yaml)`. This URL includes a **schematic ID** obtained from the [Talos Linux Image Factory](mdc:https:/factory.talos.dev). The schematic ID noted in `[hardware-configuration.mdc](mdc:hardware-configuration.mdc)` and present in `