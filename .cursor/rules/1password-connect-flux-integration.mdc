---
description: Documents Flux integration and deployment pattern for the 1Password Connect server, including HelmRepository, app structure, and reconciliation flow. Note: The associated \"Secrets Automation\" provider that uses this server is deprecated.
globs:
alwaysApply: false
---
# 1Password Connect Server: Flux Integration and Deployment Pattern

This rule documents the process and structure for adding the 1Password Connect server (paired with the External Secrets Operator) to the cluster using GitOps, Flux, and Kustomize, following the repository's conventions.

## 1. HelmRepository Source Registration
- The 1Password Connect Helm chart source is registered with Flux by creating a [HelmRepository](mdc:kubernetes/flux/meta/repos/1password-connect.yaml) CRD under `kubernetes/flux/meta/repos/`.
- This file is referenced in the Flux sources [kustomization.yaml](mdc:kubernetes/flux/meta/repos/kustomization.yaml), ensuring it is created in the `flux-system` namespace by the `cluster-meta` Kustomization.

## 2. App Directory Structure
- The Connect server is deployed as an app under the `external-secrets` namespace, following the standard app structure:
  - [kubernetes/apps/external-secrets/onepassword-connect/ks.yaml](mdc:kubernetes/apps/external-secrets/onepassword-connect/ks.yaml): Flux Kustomization CRD for the app.
  - [kubernetes/apps/external-secrets/onepassword-connect/app/kustomization.yaml](mdc:kubernetes/apps/external-secrets/onepassword-connect/app/kustomization.yaml): Kustomize root for the app's manifests.
  - [kubernetes/apps/external-secrets/onepassword-connect/app/helmrelease.yaml](mdc:kubernetes/apps/external-secrets/onepassword-connect/app/helmrelease.yaml): HelmRelease CRD for the Connect server.

## 3. Namespace Wiring
- The app's `ks.yaml` is included in the [external-secrets namespace kustomization](mdc:kubernetes/apps/external-secrets/kustomization.yaml) under `resources:`.

## 4. Flux Discovery and Reconciliation Flow
- The top-level [cluster-apps Kustomization](mdc:kubernetes/flux/cluster/ks.yaml) (not shown here) recursively discovers all namespace kustomizations under `kubernetes/apps/`.
- The `external-secrets` namespace kustomization includes the Connect app's `ks.yaml`, which tells Flux to apply the manifests in the app's `app/` directory.
- The app's `app/kustomization.yaml` references the `helmrelease.yaml`, which deploys the Connect server using the Helm chart from the registered source.
- The HelmRelease is configured to create the `onepassword-connect` namespace if it does not exist.

## 5. Summary Table
| Layer                | File/Resource                                                                 | Role/Function                                                      |
|----------------------|-------------------------------------------------------------------------------|--------------------------------------------------------------------|
| HelmRepository       | [1password-connect.yaml](mdc:kubernetes/flux/meta/repos/1password-connect.yaml) | Registers the 1Password Connect Helm chart source                  |
| Flux Sources Kustom  | [kustomization.yaml](mdc:kubernetes/flux/meta/repos/kustomization.yaml)        | Ensures HelmRepository is created in flux-system                   |
| Namespace Kustomize  | [kustomization.yaml](mdc:kubernetes/apps/external-secrets/kustomization.yaml)  | Entry point for apps in external-secrets namespace                 |
| App CRD              | [ks.yaml](mdc:kubernetes/apps/external-secrets/onepassword-connect/ks.yaml)    | Flux Kustomization for the Connect app                             |
| App Kustomize        | [app/kustomization.yaml](mdc:kubernetes/apps/external-secrets/onepassword-connect/app/kustomization.yaml) | Kustomize root for app manifests                                   |
| HelmRelease          | [helmrelease.yaml](mdc:kubernetes/apps/external-secrets/onepassword-connect/app/helmrelease.yaml) | Deploys the Connect server via Helm                               |

## 6. How Flux Deploys the App
- When changes are committed to Git:
  1. Flux's `cluster-meta` Kustomization applies all sources, including the 1Password HelmRepository.
  2. Flux's `cluster-apps` Kustomization discovers the `external-secrets` namespace kustomization, which includes the Connect app's `ks.yaml`.
  3. The Connect app's Kustomization applies the manifests in its `app/` directory, including the HelmRelease.
  4. The Helm controller deploys the Connect server using the specified chart and values.
- This ensures the Connect server is deployed, version-pinned, and managed declaratively via GitOps.
