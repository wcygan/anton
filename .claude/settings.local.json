{
  "permissions": {
    "allow": [
      "WebFetch(domain:www.talos.dev)",
      "Bash(talosctl get:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(chmod:*)",
      "Bash(deno task:*)",
      "Bash(mise install:*)",
      "Bash(git add:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(git add:*)",
      "Bash(git restore:*)",
      "Bash(./scripts/flux-deployment-check.ts)",
      "Bash(flux reconcile kustomization:*)",
      "Bash(git check-ignore:*)",
      "Bash(rg:*)",
      "Bash(true)",
      "Bash(fd:*)",
      "Bash(kubectl delete helmrelease:*)",
      "Bash(flux reconcile:*)",
      "Bash(./scripts/flux-deployment-check.ts --short)",
      "Bash(flux check:*)",
      "Bash(flux get all:*)",
      "Bash(helm show values:*)",
      "Bash(flux get kustomizations:*)",
      "Bash(flux suspend:*)",
      "Bash(flux resume hr:*)",
      "Bash(flux get hr:*)",
      "Bash(flux get kustomization:*)",
      "Bash(flux get source helm:*)",
      "Bash(git push:*)",
      "WebFetch(domain:github.com)",
      "Bash(helm repo add:*)",
      "Bash(helm repo:*)",
      "Bash(helm search:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(kubectl delete:*)",
      "Bash(flux describe:*)",
      "Bash(flux get sources git:*)",
      "Bash(flux get helmrelease:*)",
      "Bash(kubectl top:*)",
      "Bash(./tests/test-talos-disk-usage.ts)",
      "Bash(talosctl config:*)",
      "Bash(./scripts/k8s-health-check.ts:*)",
      "Bash(./tests/test-storage-via-pods.ts)",
      "Bash(./scripts/storage-health-check.ts:*)",
      "Bash(ls:*)",
      "Bash(kubectl auth can-i:*)",
      "Bash(timeout 30 deno task test:*)",
      "Bash(./tests/test-configmap-storage.ts)",
      "Bash(./tests/simulate-growth-data.ts)",
      "Bash(deno check:*)",
      "Bash(./scripts/test-monitoring-fixes.ts)",
      "Bash(deno run:*)",
      "Bash(deno eval:*)",
      "Bash(time deno run:*)",
      "Bash(time deno task:*)",
      "Bash(task health:monitor:json)",
      "Bash(timeout 3s deno run:*)"
    ],
    "deny": []
  }
}