# kubernetes/apps/airflow/airflow/app/helmrelease.yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: airflow
spec:
  interval: 15m
  chart:
    spec:
      chart: airflow
      version: "1.16.0"  # Replace with desired version
      sourceRef:
        kind: HelmRepository
        name: apache-airflow
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    # REQUIRED for Flux - Disable Helm hooks
    createUserJob:
      useHelmHooks: false
      applyCustomEnv: false
    migrateDatabaseJob:
      useHelmHooks: false
      applyCustomEnv: false

    # Enable standard naming (recommended for new installations)
    useStandardNaming: true

    # Basic configuration
    executor: "KubernetesExecutor"  # Or CeleryExecutor, etc.

    # Database configuration
    data:
      metadataConnection:
        user: airflow
        pass: airflow-db-password-changeme  # TODO: Move to 1Password/ESO
        protocol: postgresql
        host: airflow-postgresql.airflow.svc.cluster.local
        port: 5432
        db: airflow
        sslmode: disable

    # Create a custom metadata secret with the correct connection string
    extraSecrets: {}

    # Ingress configuration
    ingress:
      web:
        enabled: true
        ingressClassName: "internal"  # or "external" based on your setup
        hosts:
          - name: "airflow.${SECRET_DOMAIN}"
            tls:
              enabled: true
              secretName: "${SECRET_DOMAIN/./-}-production-tls"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"

    # Database configuration (using built-in PostgreSQL)
    postgresql:
      enabled: true
      auth:
        enablePostgresUser: true
        postgresPassword: postgres-admin-changeme  # TODO: Move to 1Password/ESO
        username: "airflow"
        password: airflow-db-password-changeme  # TODO: Move to 1Password/ESO - must match data.metadataConnection.pass
        database: "airflow"

    # Redis configuration (if using CeleryExecutor)
    redis:
      enabled: false  # Set to true if using CeleryExecutor
      # If enabled, set a static password for Flux
      # password: "your-static-redis-password"

    # Monitoring
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true

    # Security
    webserverSecretKey: ""  # Will be auto-generated

    # Resource limits
    webserver:
      resources:
        requests:
          cpu: "200m"
          memory: "512Mi"
        limits:
          cpu: "1000m"
          memory: "2Gi"

    scheduler:
      resources:
        requests:
          cpu: "200m"
          memory: "512Mi"
        limits:
          cpu: "1000m"
          memory: "2Gi"

    # If using KubernetesExecutor, configure worker resources
    workers:
      resources:
        requests:
          cpu: "200m"
          memory: "512Mi"
        limits:
          cpu: "1000m"
          memory: "2Gi"

    # Disable example DAGs in production
    env:
      - name: AIRFLOW__CORE__LOAD_EXAMPLES
        value: "False"

    dags:
      gitSync:
        enabled: true
        repo: "https://github.com/wcygan/anton.git"  # Replace with your actual repo URL if different
        branch: "main"  # Or your default branch
        subPath: "kubernetes/apps/airflow/airflow/dags" # Path to your DAGs within the repo
        # Optional: if your repo is private, you'll need to configure credentials
        # sshKeySecret: airflow-git-ssh-secret # Name of the K8s secret holding the SSH key
        # credentialsSecret: airflow-git-credentials # Name of the K8s secret for https basic auth
        # knownHosts: |
        #   github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
        # Resources for the git-sync sidecar
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
      # If you prefer to use a Persistent Volume for DAGs instead of gitSync:
      # persistence:
      #   enabled: false # Set to true to use PVC
      #   # existingClaim: your-airflow-dags-pvc # Optional: if you have an existing PVC
      #   size: 10Gi
      #   storageClassName: local-path # Or your preferred storage class
      #   accessMode: ReadWriteOnce

    # Extra secrets/configmaps without Helm hooks
    extraConfigMaps: {}
