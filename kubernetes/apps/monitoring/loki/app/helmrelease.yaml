---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: loki
      version: 6.30.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  values:
    # Use SingleBinary mode for simplicity
    deploymentMode: SingleBinary
    
    # Disable caches
    chunksCache:
      enabled: false
    resultsCache:
      enabled: false
    
    loki:
      auth_enabled: false
      
      # Common configuration
      commonConfig:
        replication_factor: 1
      
      # Schema configuration
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: index_
              period: 24h
      
      # Storage configuration
      storage:
        type: s3
        bucketNames:
          chunks: loki-logs
          ruler: loki-logs
          admin: loki-logs
        s3:
          endpoint: http://rook-ceph-rgw-storage.storage.svc.cluster.local
          region: us-east-1
          s3ForcePathStyle: true
          insecure: true
      
      # Additional storage config
      storage_config:
        aws:
          endpoint: http://rook-ceph-rgw-storage.storage.svc.cluster.local
          region: us-east-1
          bucketnames: loki-logs
          s3forcepathstyle: true
          insecure: true
      
      # Limits configuration - properly structured
      limits_config:
        allow_structured_metadata: false  # Disabled to fix negative metadata bytes error
        volume_enabled: true
        retention_period: 168h  # 7 days retention
        reject_old_samples: true
        reject_old_samples_max_age: 72h  # Reject logs older than 3 days
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
        ingestion_rate_mb: 50
        ingestion_burst_size_mb: 100
      
      # Pattern ingester for better performance
      pattern_ingester:
        enabled: true
      
      # Ruler configuration
      ruler:
        enable_api: true
        storage:
          type: s3
          s3:
            endpoint: http://rook-ceph-rgw-storage.storage.svc.cluster.local
            region: us-east-1
            bucketnames: loki-logs
            s3forcepathstyle: true
            insecure: true
    
    # Single Binary configuration
    # NOTE: Persistence is working correctly - Loki uses /var/loki on Ceph storage
    # The "storage volume mount issues" were actually structured metadata errors
    singleBinary:
      replicas: 1
      persistence:
        enabled: true
        size: 10Gi
        storageClass: ceph-block
      # Health checks for Loki API and S3 connectivity
      readinessProbe:
        httpGet:
          path: /ready
          port: 3100
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
      livenessProbe:
        httpGet:
          path: /ready
          port: 3100
        initialDelaySeconds: 120  # Allow time for S3 bucket initialization
        periodSeconds: 30
        timeoutSeconds: 10
        failureThreshold: 5  # Generous for S3 connectivity issues
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 1
          memory: 1Gi
      # S3 credentials from secret
      extraEnvFrom:
        - secretRef:
            name: loki-s3-credentials
    
    # Disable all other deployment modes
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    
    # Zero out other component replicas
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0
    
    # Gateway for API access
    gateway:
      enabled: true
      replicas: 1
      resources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
    
    # Disable MinIO
    minio:
      enabled: false
    
    # Enable monitoring integration with Prometheus and Grafana
    monitoring:
      dashboards:
        enabled: true
      rules:
        enabled: true
      serviceMonitor:
        enabled: true
      selfMonitoring:
        enabled: true
        grafanaAgent:
          installOperator: false  # Use existing Prometheus stack
    
    # Disable test
    test:
      enabled: false