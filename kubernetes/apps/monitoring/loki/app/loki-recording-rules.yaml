---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-recording-rules
  namespace: monitoring
data:
  recording_rules.yaml: |
    groups:
      - name: log_metrics
        interval: 1m
        rules:
          # Pre-compute log volume by namespace
          - record: namespace:log_lines_total:rate1m
            expr: |
              sum by (namespace) (
                rate({job="monitoring/alloy"} | __error__="" [1m])
              )
          
          # Pre-compute error rates by namespace
          - record: namespace:log_errors:rate5m
            expr: |
              sum by (namespace) (
                rate({job="monitoring/alloy"} |~ "(?i)(error|fail|exception|panic)" | __error__="" [5m])
              )
          
          # Pre-compute warning rates by namespace
          - record: namespace:log_warnings:rate5m
            expr: |
              sum by (namespace) (
                rate({job="monitoring/alloy"} |~ "(?i)(warn|warning)" | __error__="" [5m])
              )
          
          # Pre-compute flux-system specific errors
          - record: flux:log_errors:rate5m
            expr: |
              sum by (pod) (
                rate({namespace="flux-system"} |~ "(?i)(error|fail)" | __error__="" [5m])
              )
          
          # Pre-compute ingress access logs
          - record: ingress:access_logs:rate1m
            expr: |
              sum by (ingress_name) (
                rate({namespace="network", app="nginx-ingress"} | json | __error__="" [1m])
              )
          
          # Pre-compute application restart patterns
          - record: app:restart_logs:rate10m
            expr: |
              sum by (namespace, pod) (
                count_over_time({job="monitoring/alloy"} |~ "(?i)(starting|restarting|initializing)" | __error__="" [10m])
              )
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-ruler-config
  namespace: monitoring
data:
  ruler.yaml: |
    ruler:
      enable_api: true
      enable_alertmanager_v2: false
      alertmanager_url: ""
      enable_sharding: false
      ring:
        kvstore:
          store: inmemory
      rule_path: /tmp/rules
      storage:
        type: local
        local:
          directory: /tmp/rules
      remote_write:
        enabled: true
        client:
          url: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/api/v1/write
          headers:
            X-Scope-OrgID: "anonymous"