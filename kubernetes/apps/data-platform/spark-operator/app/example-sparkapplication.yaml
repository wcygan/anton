---
# Example SparkApplication for testing the Spark Operator
# This creates a simple Spark Pi calculation job
apiVersion: sparkoperator.k8s.io/v1beta2
kind: SparkApplication
metadata:
  name: spark-pi-example
  namespace: data-platform
  labels:
    app.kubernetes.io/name: spark-pi-example
    app.kubernetes.io/component: spark-application
spec:
  type: Scala
  mode: cluster
  image: "apache/spark:3.5.5"
  imagePullPolicy: IfNotPresent
  mainClass: org.apache.spark.examples.SparkPi
  mainApplicationFile: "local:///opt/spark/examples/jars/spark-examples_2.12-3.5.5.jar"
  arguments:
    - "10"
  sparkVersion: "3.5.5"
  
  # Resource configuration
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "512m"
    serviceAccount: spark-application-sa
    labels:
      version: 3.5.5
    volumeMounts:
      - name: test-volume
        mountPath: /tmp
  
  executor:
    cores: 1
    instances: 2
    memory: "512m"
    labels:
      version: 3.5.5
    volumeMounts:
      - name: test-volume
        mountPath: /tmp
  
  # Volume configuration
  volumes:
    - name: test-volume
      emptyDir: {}
  
  # Monitoring and lifecycle
  monitoring:
    exposeDriverMetrics: true
    exposeExecutorMetrics: true
    prometheus:
      jmxExporterJar: "/prometheus/jmx_prometheus_javaagent-0.17.2.jar"
      port: 8090
  
  restartPolicy:
    type: OnFailure
    onFailureRetries: 3
    onFailureRetryInterval: 10
    onSubmissionFailureRetries: 5
    onSubmissionFailureRetryInterval: 20
  
  # Optional: Batch scheduler configuration
  batchScheduler: "volcano"
  batchSchedulerOptions:
    priorityClassName: "normal"
  
  # Node selection
  nodeSelector: {}
  tolerations: []