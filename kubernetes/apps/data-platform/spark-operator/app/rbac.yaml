---
# Additional RBAC for Spark Applications
# The operator itself creates its own RBAC via Helm values
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spark-application-sa
  namespace: data-platform
  labels:
    app.kubernetes.io/name: spark-application-sa
    app.kubernetes.io/component: spark-rbac
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-application-role
  namespace: data-platform
  labels:
    app.kubernetes.io/name: spark-application-role
    app.kubernetes.io/component: spark-rbac
rules:
  # Permissions for Spark driver and executor pods
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
  # Permissions for accessing secrets (for S3, database credentials, etc.)
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  # Permissions for managing spark applications
  - apiGroups: ["sparkoperator.k8s.io"]
    resources: ["sparkapplications", "scheduledsparkapplications"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-application-rolebinding
  namespace: data-platform
  labels:
    app.kubernetes.io/name: spark-application-rolebinding
    app.kubernetes.io/component: spark-rbac
subjects:
  - kind: ServiceAccount
    name: spark-application-sa
    namespace: data-platform
roleRef:
  kind: Role
  name: spark-application-role
  apiGroup: rbac.authorization.k8s.io