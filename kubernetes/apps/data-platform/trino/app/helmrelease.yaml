---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: trino
  namespace: data-platform
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: trino
      version: "0.28.0"
      sourceRef:
        kind: HelmRepository
        name: trino
        namespace: flux-system
  values:
    image:
      tag: "476"  # Recommended version with Iceberg 1.5.0 support
    
    server:
      workers: 2
      coordinatorExtraConfig: |
        query.max-execution-time=30m
        query.max-run-time=1h
        fs.cache.enabled=false
      workerExtraConfig: |
        query.max-memory-per-node=2GB
    
    coordinator:
      jvm:
        maxHeapSize: "4G"
        gcMethod:
          type: "G1GC"
          g1:
            heapRegionSize: "32M"
      resources:
        requests:
          memory: "4Gi"
          cpu: "1000m"
        limits:
          memory: "4Gi"
          cpu: "2000m"
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "data-platform"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

    worker:
      jvm:
        maxHeapSize: "6G"
        gcMethod:
          type: "G1GC"
          g1:
            heapRegionSize: "32M"
      resources:
        requests:
          memory: "6Gi"
          cpu: "1500m"
        limits:
          memory: "6Gi"
          cpu: "3000m"
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "data-platform"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

    # Configure Iceberg catalog with Nessie
    catalogs:
      iceberg: |
        connector.name=iceberg
        iceberg.catalog.type=rest
        iceberg.rest-catalog.uri=http://nessie.data-platform.svc.cluster.local:19120/iceberg
        # S3 configuration for Iceberg tables
        fs.native-s3.enabled=true
        s3.endpoint=http://rook-ceph-rgw-storage.storage.svc.cluster.local:80
        s3.path-style-access=true
        s3.ssl.enabled=false
        s3.max-connections=500
        # Iceberg warehouse location
        iceberg.rest-catalog.warehouse=s3://iceberg-test/
        # Metadata optimization
        iceberg.delete-schema-locations-fallback=true
        iceberg.materialized-views.storage-schema=iceberg_mv
        # Performance settings
        iceberg.query-partition-filter-required=false
        iceberg.projection-pushdown-enabled=true
        iceberg.optimize.enabled=true

    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault

    containerSecurityContext:
      readOnlyRootFilesystem: false  # Trino needs to write temp files
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL

    # Environment variables for S3 credentials
    env:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: rook-ceph-object-user-storage-iceberg
            key: AccessKey
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: rook-ceph-object-user-storage-iceberg
            key: SecretKey

    # Service configuration
    service:
      type: ClusterIP
      port: 8080

    # Ingress disabled - using Tailscale instead
    ingress:
      enabled: false

    # Resource allocation
    commonLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/component: analytics-engine
      app.kubernetes.io/part-of: data-platform

    # Additional node properties (if needed)
    additionalNodeProperties: {}