---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: trino
  namespace: data-platform
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: trino
      version: "1.39.1"
      sourceRef:
        kind: HelmRepository
        name: trino
        namespace: flux-system
  values:
    image:
      repository: "trinodb/trino"
      tag: "475"  # Chart app version
    
    server:
      workers: 2
      node:
        environment: "production"
      
    coordinator:
      jvm:
        maxHeapSize: "4G"
        gcMethod:
          type: "UseG1GC"
      resources:
        requests:
          memory: "4Gi"
          cpu: "1000m"
        limits:
          memory: "4Gi"
          cpu: "2000m"
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "data-platform"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

    worker:
      jvm:
        maxHeapSize: "6G"
        gcMethod:
          type: "UseG1GC"
      resources:
        requests:
          memory: "6Gi"
          cpu: "1500m"
        limits:
          memory: "6Gi"
          cpu: "3000m"
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
        - key: "data-platform"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"

    # Configure Iceberg catalog with Nessie
    catalogs:
      iceberg: |
        connector.name=iceberg
        iceberg.catalog.type=rest
        iceberg.rest.uri=http://nessie.data-platform.svc.cluster.local:19120/iceberg
        iceberg.rest.warehouse=s3://iceberg-test/
        iceberg.fs.s3.enabled=true
        iceberg.fs.s3.endpoint=http://rook-ceph-rgw-storage.storage.svc.cluster.local:80
        iceberg.fs.s3.path-style-access=true
        iceberg.fs.s3.ssl.enabled=false
        iceberg.fs.s3.access-key=${ENV:AWS_ACCESS_KEY_ID}
        iceberg.fs.s3.secret-key=${ENV:AWS_SECRET_ACCESS_KEY}

    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault

    containerSecurityContext:
      readOnlyRootFilesystem: false  # Trino needs to write temp files
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL

    # Environment variables for S3 credentials
    env:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: rook-ceph-object-user-storage-iceberg
            key: AccessKey
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: rook-ceph-object-user-storage-iceberg
            key: SecretKey

    # Service configuration
    service:
      type: ClusterIP
      port: 8080

    # Ingress disabled - using Tailscale instead
    ingress:
      enabled: false

