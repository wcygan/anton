apiVersion: batch/v1
kind: Job
metadata:
  name: nessie-restore-template
  namespace: data-platform
  labels:
    app.kubernetes.io/name: nessie-restore
    app.kubernetes.io/component: restore
    app.kubernetes.io/part-of: data-platform
spec:
  # This is a template job - copy and modify when needed for actual restoration
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nessie-restore
    spec:
      restartPolicy: Never
      containers:
      - name: restore
        image: postgres:15-alpine
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Starting Nessie metadata restore at $(date)"
          
          # Check if backup file exists
          BACKUP_FILE="${BACKUP_FILE_PATH:-/backup/nessie-backup-latest.sql}"
          if [ ! -f "${BACKUP_FILE}" ]; then
            echo "ERROR: Backup file not found: ${BACKUP_FILE}"
            echo "Available files:"
            ls -la /backup/
            exit 1
          fi
          
          echo "Using backup file: ${BACKUP_FILE}"
          echo "Backup file size: $(ls -lh ${BACKUP_FILE} | awk '{print $5}')"
          
          # Restore database
          echo "Restoring PostgreSQL database..."
          PGPASSWORD="${POSTGRES_PASSWORD}" psql \
            -h "${POSTGRES_HOST}" \
            -U "${POSTGRES_USER}" \
            -d "${POSTGRES_DB}" \
            -v ON_ERROR_STOP=1 \
            -f "${BACKUP_FILE}"
          
          echo "Database restore completed successfully at $(date)"
          
          # Verify restore
          echo "Verifying restore..."
          TABLE_COUNT=$(PGPASSWORD="${POSTGRES_PASSWORD}" psql \
            -h "${POSTGRES_HOST}" \
            -U "${POSTGRES_USER}" \
            -d "${POSTGRES_DB}" \
            -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'nessie';" | tr -d ' ')
          
          echo "Restored ${TABLE_COUNT} tables in nessie schema"
          
          if [ "${TABLE_COUNT}" -eq "0" ]; then
            echo "WARNING: No tables found in nessie schema after restore"
            exit 1
          fi
          
          echo "Restore verification completed successfully"
        env:
        - name: POSTGRES_HOST
          value: "nessie-postgres-rw"
        - name: POSTGRES_DB
          value: "nessie"
        - name: POSTGRES_USER
          value: "nessie"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nessie-postgres-app
              key: password
        - name: BACKUP_FILE_PATH
          value: ""  # Set this when creating actual restore job
        volumeMounts:
        - name: backup-storage
          mountPath: /backup
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: backup-storage
        persistentVolumeClaim:
          claimName: nessie-backup-pvc